{"ts":1361663209534,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var counter; //Used to control the countdown for the clock\nvar count = 10;\n\n$(document).ready(function() {\n  initializeScreen();\n});\n\n//This function hides the clock, normal quiz and quick quiz, as they do not need to be seen when the screen\n//is first loaded. They will be shown when the server tells us to show them\nfunction initializeScreen(){\n\t$('#clock').css('display', 'none');\n\t$('#normal_quiz').css('display', 'none');\n\t$('#quick_quiz').css('display', 'none');\n}\n\n//This is just a UX function that gives feedback on what was clicked. It should be transformed to know which\n//class was clicked, and send the ID of that clicked element to the server, which would return the appropriate\n//data model. It should also load the appropriate course tab.\n$('.class_item').click(function(){\n\tvar color = $(this).css('background-color');\n\tconsole.log(color);\n\t$(this).css('background-color', 'blue');\n\tsetTimeout(function(){\n\t\t$('#class_panel').css('display', 'block');\n\t\t$(\"#intro_panel\").css('display', 'none');\n\t}, 50);\n});\n\n//This is the listener for the back button. It hides the course tab, and shows the initial intro panel\n$('.back_button').click(function(){\n\t$('.class_item').css('background-color', '#d6d1d1');\n\t$('#class_panel').css('display', 'none');\n\t$(\"#intro_panel\").css('display', 'block');\n\n});\n\n//This is a debugging listener. When clicked, it will hide the default message, display the clock and show \n//the quick quiz form for a set amount of time\n$('#start_quick_quiz').click(function(){\n\t$('#default_message').css('display', 'none');\n\t$('#clock').fadeIn();\n\t$('#quick_quiz').fadeIn();\n\n\tcounter = setInterval(quick_quiz_timer, 1000);\n});\n\n//This is a debugging listener. When clicked, it will hide the default message, display the clock and show \n//the normal quiz form for a set amount of time\n$('#start_normal_quiz').click(function(){\n\t$('#default_message').css('display', 'none');\n\t$('#clock').fadeIn();\n\t$('#normal_quiz').fadeIn();\n\n\tcounter = setInterval(normal_quiz_timer, 1000);\n\n});\n\n//This is a timer that is used to administer the quick quiz. When the timer reaches zero, it calls the showInitialScreen() function\n//which will need to be replaced. The replacement function should take the data from the form and send it to the server to be \n//aggregated and shown to the teacher. Not sure if there will be feedback for the student.\nfunction quick_quiz_timer(){\n\tcount = count-1;\n\t$('#clock').html(count);\n\tif (count <= 0){\n\t\tcount = 10;\n\t\tclearInterval(counter);\n\t\tshowInitialScreen();\n\t\t$('#clock').html(count);\n\t\treturn;\n\t}\n}\n\n//This is a timer that is used to administer the normal quiz. When the timer reaches zero, it calls the showInitialScreen() function\n//which will need to be replaced. The replacement function should take the data from the form and send it to the server to be \n//aggregated and shown to the teacher. It should also reload the questions, but this time show the users choice, the correct answer,\n//and a reason why the correct answer is correct.\nfunction normal_quiz_timer(){\n\tcount = count-1;\n\t$('#clock').html(count);\n\tif (count <= 0){\n\t\tcount = 10;\n\t\tclearInterval(counter);\n\t\tshowInitialScreen();\n\t\t$('#clock').html(count);\n\t\treturn;\n\t}\n}\n//This is a temporary function that just reloads the default message\nfunction showInitialScreen(){\n\t$('#clock').css('display', 'none');\n\t$('#normal_quiz').css('display', 'none');\n\t$('#quick_quiz').css('display', 'none');\n\t$('#default_message').fadeIn();\n}"]],"start1":0,"start2":0,"length1":0,"length2":3454}]],"length":3454}
{"ts":1361741725497,"patch":[[{"diffs":[[0,"unter);\n"],[-1,"\t\tshowInitialScreen("],[1,"        sendAnswer(question.live"],[0,");\n\t\t$('"]],"start1":3126,"start2":3126,"length1":36,"length2":48}]],"length":3466,"saved":false}
{"ts":1361742051362,"patch":[[{"diffs":[[0,"unter);\n"],[1,"        if (student.question[question.live] ==== undefined){\n            showInitialScreen()\n        }\n        else{\n    "],[0,"        "]],"start1":3126,"start2":3126,"length1":16,"length2":137},{"diffs":[[0,".live);\n"],[1,"        }\n"],[0,"\t\t$('#cl"]],"start1":3282,"start2":3282,"length1":16,"length2":26}]],"length":3597,"saved":false}
